stages:
  - test
  - build
  - migrate
  - push

include:
  - project: "noirlab/ci-cd-common"
    file:
      # Can't build multi-arch. psutil is not available for arm64.
      - "jobs/build-container-image.tpl.yml"
      - "jobs/k8s-update-tag.tpl.yml"

.test:
  image: python:3.11
  services:
    - name: redis:latest
      alias: redis
    - name: postgres:latest
      alias: postgres
      variables:
        POSTGRES_DB: test_satchecker
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
      command: ["postgres", "-c", "fsync=off"]
  variables:
    POSTGRES_DB: test_satchecker
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
    SQLALCHEMY_DATABASE_URI: "postgresql://postgres:postgres@postgres:5432/test_satchecker"
    REDIS_URL: "redis://redis:6379/0"
    LOCAL_DB: "1"
  before_script:
    - apt-get update && apt-get install -y postgresql-client
    - python -m pip install --upgrade pip
    - pip install pytest pytest-mock
    - pip install -r src/api/requirements.txt
    - until pg_isready -h postgres -p 5432; do echo "Waiting for postgres..."; sleep 2; done
  script:
    - export PYTHONPATH=src/
    - pytest
  artifacts:
    expose_as: "Pytest coverage report"
    paths:
      - htmlcov

# workflow:
#   rules:
#     - if: $CI_PIPELINE_SOURCE == "external_pull_request_event"

####### DEVELOPMENT API #######
Dev API Test:
  extends: .test
  stage: test
  rules:
    # - if: '$CI_PIPELINE_SOURCE == "external_pull_request_event"'
    # - if: ($CI_PIPELINE_SOURCE == "external_pull_request_event" && $CI_COMMIT_BRANCH == "develop")
    - if: $CI_COMMIT_BRANCH == "develop"
      changes:
        paths:
          - "src/api/**/*"

Dev API Build:
  extends: .build_image
  stage: build
  variables:
    REGISTRY_SUBPATH: "api-dev"
    CONTAINERFILE: "Dockerfile"
    CONTAINER_CONTEXT: "src/api"
    ENVIRONMENT: "dev"
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
      changes:
        paths:
          - "src/api/**/*"

Dev API Push Tag:
  extends: .push_tag
  stage: push
  variables:
    APP_NAME: "itops-cps-satchecker-dev"
  dependencies:
    - Dev API Build
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
      changes:
        paths:
          - "src/api/**/*"

####### PRODUCTION API #######

Prod API Test:
  extends: .test
  stage: test
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
        paths:
          - "src/api/**/*"

Prod API Build:
  extends: .build_image
  stage: build
  variables:
    REGISTRY_SUBPATH: "api-prod"
    CONTAINERFILE: "Dockerfile"
    CONTAINER_CONTEXT: "src/api"
    ENVIRONMENT: "prod"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
        paths:
          - "src/api/**/*"

Prod API Push Tag:
  extends: .push_tag
  stage: push
  variables:
    APP_NAME: "itops-cps-satchecker"
  dependencies:
    - Prod API Build
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
        paths:
          - "src/api/**/*"

####### DEVELOPMENT DATA #######

Dev Data Build:
  extends: .build_image
  stage: build
  variables:
    REGISTRY_SUBPATH: "data-dev"
    CONTAINERFILE: "Dockerfile"
    CONTAINER_CONTEXT: "src/data"
    ENVIRONMENT: "dev"
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
      changes:
        paths:
          - "src/data/**/*"

Dev Data Push Tag:
  extends: .push_tag
  stage: push
  variables:
    APP_NAME: "itops-cps-satchecker-dev"
  dependencies:
    - Dev Data Build
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
      changes:
        paths:
          - "src/data/**/*"

####### PRODUCTION DATA #######

Prod Data Build:
  extends: .build_image
  stage: build
  variables:
    REGISTRY_SUBPATH: "data-prod"
    CONTAINERFILE: "Dockerfile"
    CONTAINER_CONTEXT: "src/data"
    ENVIRONMENT: "prod"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
        paths:
          - "src/data/**/*"

Prod Data Push Tag:
  extends: .push_tag
  stage: push
  variables:
    APP_NAME: "itops-cps-satchecker"
  dependencies:
    - Prod Data Build
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
        paths:
          - "src/data/**/*"

.migrate_base:
  image: python:3.11
  stage: migrate
  before_script:
    - pip install -r src/api/requirements.txt
    - pip install alembic psycopg2-binary
  variables:
    PYTHONPATH: "src"

Dev DB Migrate:
  extends: .migrate_base
  script:
    - export PYTHONPATH=src
    - cd src/api
    - alembic -c migrations/alembic.ini upgrade head
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
      changes:
        paths:
          - "src/api/migrations/**/*"

# Commented out during testing
# Prod DB Migrate:
#   extends: .migrate_base
#   script:
#     - export PYTHONPATH=src
#     - cd src/api
#     - alembic -c migrations/alembic.ini upgrade head
#   rules:
#     - if: $CI_COMMIT_BRANCH == "main"
#       changes:
#         paths:
#           - "src/api/migrations/**/*"
#   when: manual  # Requires manual approval for production migrations
