name: Radon Code Complexity Analysis

on:
  workflow_call:
    # This allows the workflow to be called by other workflows

jobs:
  analyze-complexity:
    name: Analyze Code Complexity
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install radon jq

      - name: Run Radon and generate report
        run: |
          echo "## 游빑 Radon Complexity Report" >> $GITHUB_STEP_SUMMARY
          echo "| File | Function | Complexity | Rating |" >> $GITHUB_STEP_SUMMARY
          echo "|------|----------|------------|--------|" >> $GITHUB_STEP_SUMMARY

          radon cc src/api -a -nc --json | jq -r '
            keys[] as $file |
            .[$file][] |
            "| \($file) | \(.name) | \(.complexity) | \(
              if .complexity < 5 then "游릭 A"
              elif .complexity < 10 then "游릭 B"
              elif .complexity < 20 then "游리 C"
              elif .complexity < 30 then "游리 D"
              elif .complexity < 40 then "游댮 E"
              else "游댮 F" end
            ) |"
          ' >> $GITHUB_STEP_SUMMARY

      - name: Run Maintainability Index Report
        run: |
          echo "## 游늵 Maintainability Index Report" >> $GITHUB_STEP_SUMMARY
          echo "| File | Maintainability Index | Rank |" >> $GITHUB_STEP_SUMMARY
          echo "|------|-----------------------|------|" >> $GITHUB_STEP_SUMMARY

          radon mi src/api --json | jq -r '
            to_entries[] |
            "| \(.key) | \(.value.mi) | \(.value.rank) |"
          ' >> $GITHUB_STEP_SUMMARY

      - name: Fail on high complexity (Optional)
        run: |
          MAX_COMPLEXITY=20
          EXIT_CODE=0
          echo "## 游뚿 High Complexity Functions Detected" >> $GITHUB_STEP_SUMMARY
          echo "| File | Function | Complexity | Rating |" >> $GITHUB_STEP_SUMMARY
          echo "|------|----------|------------|--------|" >> $GITHUB_STEP_SUMMARY

          radon cc src/api -nc --json | jq -r '
            to_entries[] |
            .key as $file |
            .value[] |
            select(.complexity > '"$MAX_COMPLEXITY"') |
            "| \($file) | \(.name) | \(.complexity) | " +
            (if .complexity < 5 then "游릭 A"
             elif .complexity < 10 then "游릭 B"
             elif .complexity < 20 then "游리 C"
             elif .complexity < 30 then "游리 D"
             elif .complexity < 40 then "游댮 E"
             else "游댮 F" end) + " |"
          ' >> $GITHUB_STEP_SUMMARY

          if grep -q "游댮 F" $GITHUB_STEP_SUMMARY; then
            EXIT_CODE=1
          fi
          exit $EXIT_CODE
        continue-on-error: false

      - name: Save complexity report for dashboard
        if: always()
        run: |
          # Create directory for the report
          mkdir -p complexity_report

          # Create HTML file with all content directly embedded
          cat > complexity_report/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <title>Code Complexity Report</title>
            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
            <style>
              body { padding: 20px; }
              table { width: 100%; margin-bottom: 20px; }
              th, td { padding: 8px; text-align: left; border-bottom: 1px solid #ddd; }
              tr:hover { background-color: #f5f5f5; }
              h2 { margin-top: 30px; margin-bottom: 15px; padding-bottom: 10px; border-bottom: 1px solid #eee; }
              .rating-a, .rating-b { color: green; font-weight: bold; }
              .rating-c, .rating-d { color: orange; font-weight: bold; }
              .rating-e, .rating-f { color: red; font-weight: bold; }
            </style>
          </head>
          <body>
            <div class="container">
              <h1 class="mt-4 mb-4">Code Complexity Report</h1>
              <p>Generated on $(date)</p>

              <h2>Complexity Report</h2>
              <table class="table table-striped">
                <thead>
                  <tr>
                    <th>File</th>
                    <th>Function</th>
                    <th>Complexity</th>
                    <th>Rating</th>
                  </tr>
                </thead>
                <tbody>
          EOF

          # Add complexity report
          radon cc src/api -a -nc --json | jq -r '
            keys[] as $file |
            .[$file][] |
            "                  <tr>
                    <td>" + $file + "</td>
                    <td>" + .name + "</td>
                    <td>" + (.complexity | tostring) + "</td>
                    <td class=\"rating-" + (
                      if .complexity < 5 then "a"
                      elif .complexity < 10 then "b"
                      elif .complexity < 20 then "c"
                      elif .complexity < 30 then "d"
                      elif .complexity < 40 then "e"
                      else "f" end) + "\">" + (
                      if .complexity < 5 then "游릭 A"
                      elif .complexity < 10 then "游릭 B"
                      elif .complexity < 20 then "游리 C"
                      elif .complexity < 30 then "游리 D"
                      elif .complexity < 40 then "游댮 E"
                      else "游댮 F" end) + "</td>
                  </tr>"
          ' >> complexity_report/index.html

          # Add maintainability report
          cat >> complexity_report/index.html << 'EOF'
                </tbody>
              </table>

              <h2>Maintainability Index Report</h2>
              <table class="table table-striped">
                <thead>
                  <tr>
                    <th>File</th>
                    <th>Maintainability Index</th>
                    <th>Rank</th>
                  </tr>
                </thead>
                <tbody>
          EOF

          radon mi src/api --json | jq -r '
            to_entries[] |
            "                  <tr>
                    <td>" + .key + "</td>
                    <td>" + (.value.mi | tostring) + "</td>
                    <td>" + .value.rank + "</td>
                  </tr>"
          ' >> complexity_report/index.html

          # Add high complexity functions
          cat >> complexity_report/index.html << 'EOF'
                </tbody>
              </table>

              <h2>High Complexity Functions</h2>
              <table class="table table-striped">
                <thead>
                  <tr>
                    <th>File</th>
                    <th>Function</th>
                    <th>Complexity</th>
                    <th>Rating</th>
                  </tr>
                </thead>
                <tbody>
          EOF

          # Check if any high complexity functions exist
          high_complexity_found=$(radon cc src/api -nc --json | jq -r '
            [to_entries[] |
             .key as $file |
             .value[] |
             select(.complexity > 20) |
             {file: $file, name: .name, complexity: .complexity}] |
            length')

          if [ "$high_complexity_found" -gt 0 ]; then
            radon cc src/api -nc --json | jq -r '
              to_entries[] |
              .key as $file |
              .value[] |
              select(.complexity > 20) |
              "                  <tr>
                      <td>" + $file + "</td>
                      <td>" + .name + "</td>
                      <td>" + (.complexity | tostring) + "</td>
                      <td class=\"rating-" + (
                        if .complexity < 5 then "a"
                        elif .complexity < 10 then "b"
                        elif .complexity < 20 then "c"
                        elif .complexity < 30 then "d"
                        elif .complexity < 40 then "e"
                        else "f" end) + "\">" + (
                        if .complexity < 5 then "游릭 A"
                        elif .complexity < 10 then "游릭 B"
                        elif .complexity < 20 then "游리 C"
                        elif .complexity < 30 then "游리 D"
                        elif .complexity < 40 then "游댮 E"
                        else "游댮 F" end) + "</td>
                    </tr>"
            ' >> complexity_report/index.html
          else
            echo '                  <tr><td colspan="4">No high complexity functions found</td></tr>' >> complexity_report/index.html
          fi

          # Add top 10 most complex functions
          cat >> complexity_report/index.html << 'EOF'
                </tbody>
              </table>

              <h2>Top 10 Most Complex Functions</h2>
              <table class="table table-striped">
                <thead>
                  <tr>
                    <th>File</th>
                    <th>Function</th>
                    <th>Complexity</th>
                    <th>Rating</th>
                  </tr>
                </thead>
                <tbody>
          EOF

          radon cc src/api -a -nc --json | jq -r '
            [keys[] as $file |
             .[$file][] |
             {file: $file, name: .name, complexity: .complexity}] |
            sort_by(-.complexity) |
            .[0:10] |
            .[] |
            "                  <tr>
                    <td>" + .file + "</td>
                    <td>" + .name + "</td>
                    <td>" + (.complexity | tostring) + "</td>
                    <td class=\"rating-" + (
                      if .complexity < 5 then "a"
                      elif .complexity < 10 then "b"
                      elif .complexity < 20 then "c"
                      elif .complexity < 30 then "d"
                      elif .complexity < 40 then "e"
                      else "f" end) + "\">" + (
                      if .complexity < 5 then "游릭 A"
                      elif .complexity < 10 then "游릭 B"
                      elif .complexity < 20 then "游리 C"
                      elif .complexity < 30 then "游리 D"
                      elif .complexity < 40 then "游댮 E"
                      else "游댮 F" end) + "</td>
                  </tr>"
          ' >> complexity_report/index.html

          # Close the HTML
          cat >> complexity_report/index.html << 'EOF'
                </tbody>
              </table>
            </div>
          </body>
          </html>
          EOF

      - name: Upload complexity report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: complexity_report
          path: complexity_report/
